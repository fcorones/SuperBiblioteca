@page "/misreservas"
@inject AuthContext AuthContext
@inject NavigationManager NavigationManager
@inject PrestamoService PrestamoService
@inject LibroService LibroService
@inject IJSRuntime JSRuntime
@using BibliotecaDeClasesWinformYBlazor.Models
@using BibliotecaDeClasesWinformYBlazor.Servicios

<style>
    .reservas-container {       /*Contenedor principal*/
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
        font-family: 'Poppins', sans-serif;
    }

    h3 {
        color: #2d2d2d;
        font-weight: 600;
        margin-bottom: 1.5rem;
        text-align: center;
        font-size: 1.8rem;
        background: linear-gradient(135deg, #404040, #606060);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .status-section {
        margin-bottom: 2rem;
        background: #ffffff;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .table tr.vencido {
        background-color: #ffebee; /* Color rojo para los vencidos */
    }

        .table tr.vencido:hover {
            background-color: #ffcdd2; 
        }

        .table tr.vencido td {
            color: #c62828; 
        }

    .section-title { /*Estilo para los títulos de las secciones*/
        font-size: 1.4rem;
        color: #2d2d2d;
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid #e0e0e0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .table {
        width: 100%;
        border-collapse: separate; /*Estilos para las tablas*/
        border-spacing: 0;
    }

        .table th {
            background: #4a4a4a; 
            color: white;
            padding: 0.75rem;
            font-weight: 500;
            text-align: left;
        }

        .table td {
            padding: 0.75rem;
            border-bottom: 1px solid #e0e0e0;
        }

        .table tr:hover {
            background-color: #f8f8f8;
        }

    .badge {
        padding: 0.5em 0.75em;
        border-radius: 20px;
        font-size: 0.9em;
        font-weight: 500;
    }

    .badge-reservado {          /*Iconos rojo verde y amarillo de reservado retirado y devuelto*/
        background: #fff3cd;
        color: #856404;
    }

    .badge-retirado {
        background: #d4edda;
        color: #155724;
    }

    .badge-devuelto {
        background: #f8d7da;
        color: #721c24;
    }

    .btn-cancelar {
        background: linear-gradient(135deg, #dc3545, #bb2d3b);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: none;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

        .btn-cancelar:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(220, 53, 69, 0.2);
        }

    .loading-container {
        text-align: center;
        padding: 3rem;
    }

    .spinner {
        width: 3rem;
        height: 3rem;
        border: 0.25em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spin 0.75s linear infinite;
    }

    @@keyframes spin {
        to { /*animacion*/
            transform: rotate(360deg);
        }
    }

    .empty-section {
        text-align: center;
        padding: 2rem;
        background: #f8f9fa;
        border-radius: 8px;
        color: #6c757d;
    }

    .empty-icon {
        font-size: 2.5rem;
        color: #e0e0e0;
        margin-bottom: 1rem;
    }

    .table-responsive {
        overflow-x: auto;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .acciones-column {
        width: 150px;
        text-align: center;
    }

    .fecha-column {
        width: 120px;
    }

    .estado-column {
        width: 100px;
    }

    @@media (max-width: 768px) {
        .table th,
        .table td {
            padding: 0.5rem;
        }

        .btn-cancelar {
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
        }

        .section-title {
            font-size: 1.2rem;
        }
    }
</style>

<div class="reservas-container">
    <h3>Historial de Préstamos</h3>

    @if (reservas == null)
    {
        <div class="loading-container">
            <div class="spinner"></div>
            <p class="mt-2">Cargando tus reservas...</p>
        </div>
    }
    else
    {
        <!-- Préstamos Reservados (Pendientes) -->
        <div class="status-section">
            <h4 class="section-title">
                <span class="bi bi-clock"></span>
                Préstamos Reservados
            </h4>
            @if (reservasPendientes.Any())
            {
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Libro</th>
                                <th>Autor</th>
                                <th class="fecha-column">Reserva</th>
                                <th class="fecha-column">Límite</th>
                                <th class="estado-column">Estado</th>
                                <th class="acciones-column">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var reserva in reservasPendientes)
                            {
                                <tr>
                                    <td>@reserva.LibroNombre</td>
                                    <td>@reserva.NombreAutor</td>
                                    <td>@reserva.FechaPrestamo.ToShortDateString()</td>
                                    <td>@reserva.FechaDevolucion.ToShortDateString()</td>
                                    <td>
                                        <span class="badge badge-reservado">@reserva.Estado</span>
                                    </td>
                                    <td>
                                        <button class="btn-cancelar" @onclick="@(() => CancelarReserva(reserva.Id))">
                                            Cancelar
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-section">
                    <span class="bi bi-journal-x empty-icon"></span>
                    <p>No tienes reservas pendientes</p>
                </div>
            }
        </div>

        <!-- Préstamos Activos (Retirados) -->
        <div class="status-section">
            <h4 class="section-title">
                <span class="bi bi-book"></span>
                Préstamos Activos
            </h4>
            @if (reservasActivas.Any())
            {
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Libro</th>
                                <th>Autor</th>
                                <th class="fecha-column">Retirado</th>
                                <th class="fecha-column">Devolución</th>
                                <th class="estado-column">Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var reserva in reservasActivas)
                            {
                                <tr class="@(reserva.EstaVencido ? "vencido" : "")">
                                    <td>@reserva.LibroNombre</td>
                                    <td>@reserva.NombreAutor</td>
                                    <td>@reserva.FechaPrestamo.ToShortDateString()</td>
                                    <td>@reserva.FechaDevolucion.ToShortDateString()</td>
                                    <td>
                                        <span class="badge badge-retirado">@reserva.Estado</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-section">
                    <span class="bi bi-journal-x empty-icon"></span>
                    <p>No tienes préstamos activos</p>
                </div>
            }
        </div>

        <!-- Histórico de Préstamos (Devueltos) -->
        <div class="status-section">
            <h4 class="section-title">
                <span class="bi bi-archive"></span>
                Histórico de Préstamos
            </h4>
            @if (reservasHistoricas.Any())
            {
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Libro</th>
                                <th>Autor</th>
                                <th class="fecha-column">Retirado</th>
                                <th class="fecha-column">Devuelto</th>
                                <th class="estado-column">Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var reserva in reservasHistoricas)
                            {
                                <tr>
                                    <td>@reserva.LibroNombre</td>
                                    <td>@reserva.NombreAutor</td>
                                    <td>@reserva.FechaPrestamo.ToShortDateString()</td>
                                    <td>@reserva.FechaDevolucion.ToShortDateString()</td>
                                    <td>
                                        <span class="badge badge-devuelto">@reserva.Estado</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-section">
                    <span class="bi bi-journal-x empty-icon"></span>
                    <p>No tienes préstamos históricos</p>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<ReservaViewModel> reservas = new();
    private List<ReservaViewModel> reservasPendientes = new();
    private List<ReservaViewModel> reservasActivas = new();
    private List<ReservaViewModel> reservasHistoricas = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var usuarioId = AuthContext.UserId;
            if (usuarioId == 0)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }

            var prestamos = await PrestamoService.GetPrestamosAsync();
            var libros = await LibroService.GetLibrosAsync();

            // Modificar esta condición para incluir los eliminados que están devueltos
            reservas = prestamos?
                .Where(p => p.UsuarioId == usuarioId &&
                       (!p.Eliminado || (p.Eliminado && p.Estado == EstadoPrestamo.Devuelto)))
                .Select(p => new ReservaViewModel
                    {
                        Id = p.Id,
                        FechaPrestamo = p.FechaPrestamo,
                        FechaDevolucion = p.FechaDevolucion,
                        Estado = p.Estado,
                        LibroNombre = libros.FirstOrDefault(l => l.Id == p.LibroId)?.Titulo ?? "Desconocido",
                        NombreAutor = libros.FirstOrDefault(l => l.Id == p.LibroId)?.NombreAutor ?? "Desconocido",
                        NombreEditorial = libros.FirstOrDefault(l => l.Id == p.LibroId)?.NombreEditorial ?? "Desconocido",
                        AnioDePublicacion = libros.FirstOrDefault(l => l.Id == p.LibroId)?.AnioDePublicacion.ToString() ?? "N/A",
                        EstaVencido = p.Estado == EstadoPrestamo.Retirado && p.FechaDevolucion < DateTime.Now // Calcular si está vencido
                    })
                .ToList();

            // Agrupar por estados
            reservasPendientes = reservas.Where(r => r.Estado == EstadoPrestamo.Reservado).ToList();
            reservasActivas = reservas.Where(r => r.Estado == EstadoPrestamo.Retirado).ToList();
            reservasHistoricas = reservas.Where(r => r.Estado == EstadoPrestamo.Devuelto).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar las reservas: {ex.Message}");
        }
    }

    private async Task CancelarReserva(int prestamoId)
    {
        if (await ConfirmarCancelacion())
        {
            try
            {
                var prestamo = await PrestamoService.GetPrestamoByIdAsync(prestamoId);
                if (prestamo != null)
                {
                    prestamo.Eliminado = true; // Eliminación lógica
                    await PrestamoService.ModificarPrestamoAsync(prestamo);
                    await OnInitializedAsync(); // Recargar datos
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error al cancelar reserva: {ex.Message}");
            }
        }
    }

    private async Task<bool> ConfirmarCancelacion()
    {
        return await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de cancelar esta reserva?");
    }

    private class ReservaViewModel
    {
        public int Id { get; set; }
        public DateTime FechaPrestamo { get; set; }
        public DateTime FechaDevolucion { get; set; }
        public EstadoPrestamo Estado { get; set; }
        public string LibroNombre { get; set; }
        public string NombreAutor { get; set; }
        public string NombreEditorial { get; set; }
        public string AnioDePublicacion { get; set; }
        ////COCACOLA
        public bool EstaVencido { get; set; }
    }
}