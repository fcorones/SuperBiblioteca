@page "/login"
@layout MainLayout
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject AuthContext AuthContext
@using BibliotecaDeClasesWinformYBlazor.Models
@using BibliotecaDeClasesWinformYBlazor

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="card-title mb-0">Iniciar sesión</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="email" class="form-label">
                        <span class="bi bi-envelope-fill me-2"></span>Email
                    </label>
                    <InputText id="email" class="form-control" @bind-Value="loginRequest.Email" />
                </div>

                <div class="mb-3">
                    <label for="contraseña" class="form-label">
                        <span class="bi bi-lock-fill me-2"></span>Contraseña
                    </label>
                    <InputText id="contraseña" type="password" class="form-control" @bind-Value="loginRequest.Contraseña" />
                </div>

                <button type="submit" class="btn btn-primary w-100 mb-3">
                    <span class="bi bi-box-arrow-in-right me-2"></span>Ingresar
                </button>

                <div class="text-center">
                    <p class="mb-0">¿No tienes una cuenta?</p>
                    <a href="/register" class="btn btn-outline-secondary w-100">
                        <span class="bi bi-person-plus-fill me-2"></span>Registrarse
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();

    private async Task HandleLogin()
    {
        var httpClient = HttpClientProvider.GetHttpClient();
        var response = await httpClient.PostAsJsonAsync("api/Usuarios/login", loginRequest);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<TokenResponse>();

            if (result != null && !string.IsNullOrEmpty(result.Token))
            {
                Console.WriteLine($"[Login] Token recibido: {result.Token}");

                await AuthContext.SaveTokenToLocalStorageAsync(result.Token);
                Console.WriteLine($"[Login] Usuario autenticado como: {AuthContext.UserName}");

                //StateHasChanged();

                NavigationManager.NavigateTo("/", forceLoad: true);

                
            }
            else
            {
                Console.WriteLine("[Login] Error: No se recibió un token válido.");
            }
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"[Login] Error al iniciar sesión: {errorMessage}");
        }
    }

    public class LoginRequest
    {
        public string Email { get; set; } = string.Empty;
        public string Contraseña { get; set; } = string.Empty;
    }

    public class TokenResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}