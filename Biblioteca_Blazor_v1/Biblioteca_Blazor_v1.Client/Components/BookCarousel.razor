@page "/libros"
@using BibliotecaDeClasesWinformYBlazor.Servicios
@using BibliotecaDeClasesWinformYBlazor.Models
@inject LibroService LibroService
@inject NavigationManager Navigation

@if (isLoading)
{
    <div class="loading-container">
        <div class="loading-card">
            <div class="loading-header">
                <h3 class="loading-title">Cargando Libros</h3>
            </div>
            <div class="loading-body">
                <div class="spinner"></div>
                <p class="loading-text">Buscando en nuestra biblioteca...</p>
            </div>
        </div>
    </div>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
else if (!Libros.Any())
{
    <p>No se encontraron libros.</p>
}
else
{
    <div class="book-grid">
        @foreach (var libro in LibrosPaginados)
        {
            <div class="book-item" @key="libro.Id" @onclick="() => VerDetalles(libro.Id)">
                <img src="@libro.PortadaUrl" alt="@libro.Titulo" class="book-cover" />
            </div>
        }
    </div>

    <div class="pagination-controls">
        <button @onclick="PaginaAnterior" disabled="@(PaginaActual == 1)">Anterior</button>
        <span>Página @PaginaActual de @TotalPaginas</span>
        <button @onclick="PaginaSiguiente" disabled="@(PaginaActual == TotalPaginas)">Siguiente</button>
    </div>
}

@code {
    private List<Libro> Libros = new();
    private IEnumerable<Libro> LibrosPaginados => Libros.Skip((PaginaActual - 1) * TamañoPagina).Take(TamañoPagina);
    private bool isLoading = true;
    private string errorMessage = null;
    private bool _datosCargados = false;

 
    private int PaginaActual = 1;
    private int TamañoPagina = 12;
    private int TotalPaginas => (int)Math.Ceiling((double)Libros.Count / TamañoPagina);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_datosCargados)
        {
            try
            {
                isLoading = true;
                Libros = await LibroService.GetLibrosAsync();
                _datosCargados = true;
            }
            catch (Exception ex)
            {
                errorMessage = $"Error al cargar los libros: {ex.Message}";
            }
            finally
            {
                isLoading = false;
                StateHasChanged(); // Asegurar que la UI se actualiza después de la carga
            }
        }
    }

    private void VerDetalles(int libroId)
    {
        // Navegar a la página de detalles del libro
        Navigation.NavigateTo($"/libro/{libroId}");
    }

    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
        }
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < TotalPaginas)
        {
            PaginaActual++;
        }
    }
}

<style>
    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 70vh;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(5px);
    }

    .loading-card {
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        padding: 2rem;
        text-align: center;
        width: 300px;
        border: 1px solid #e0e0e0;
    }

    .loading-header {
        margin-bottom: 1.5rem;
    }

    .loading-title {
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 1.5rem;
        letter-spacing: -0.5px;
        background: linear-gradient(135deg, #404040, #606060);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .loading-body {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
    }

    .spinner {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: 4px solid #f0f0f0;
        border-top: 4px solid #606060;
        animation: spin 1s linear infinite;
    }

    .loading-text {
        font-family: 'Poppins', sans-serif;
        color: #4a4a4a;
        font-size: 0.9rem;
        margin: 0;
        font-weight: 500;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .book-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 16px;
        padding: 16px;
    }

    .book-item {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 250px;
        background-color: #f8f8f8;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.2s;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

        .book-item:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .book-cover {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        transition: opacity 0.2s;
    }

    .book-item:hover .book-cover {
        opacity: 0.9;
    }

    .pagination-controls {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 16px;
        margin-top: 16px;
    }

        .pagination-controls button {
            padding: 8px 16px;
            border: none;
            background: linear-gradient(135deg, #2d2d2d, #4a4a4a);
            color: white;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .pagination-controls button:disabled {
                background: linear-gradient(135deg, #cccccc, #999999);
                color: #666666;
                cursor: not-allowed;
            }

            .pagination-controls button:hover:not(:disabled) {
                background-color: #0056b3;
            }
</style>