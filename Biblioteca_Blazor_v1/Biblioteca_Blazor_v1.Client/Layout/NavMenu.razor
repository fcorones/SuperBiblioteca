@inject AuthContext AuthContext
@inject NavigationManager NavigationManager

<style>
    .nav-menu-container {
        font-family: 'Poppins', sans-serif;
    }

    .navbar-brand {
        font-weight: 600;
        letter-spacing: -0.5px;
        font-size: 1.4rem;
        background: linear-gradient(135deg, #ffffff, #e0e0e0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        transition: all 0.3s ease;
    }

    .nav-link {
        font-weight: 500;
        letter-spacing: -0.2px;
        border-radius: 8px;
        margin: 4px 0;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        padding: 12px 15px;
    }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(8px);
        }

        .nav-link.active {
            background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
            font-weight: 600;
        }

    .bi {
        font-size: 1.2rem;
        vertical-align: middle;
        margin-right: 12px;
        transition: transform 0.3s ease;
    }

    .nav-link:hover .bi {
        transform: scale(1.1);
    }

    .nav-scrollable {
        padding: 15px;
        background: linear-gradient(160deg, #1a1a1a, #2d2d2d);
    }

    .navbar-toggler {
        border-color: rgba(255,255,255,0.15);
    }

    @@media (min-width: 768px) {
        .nav-scrollable {
            height: calc(100vh - 60px);
        }
    }

    @@keyframes navItemEntrance {
        0% {
            opacity: 0;
            transform: translateX(-20px);
        }
        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .nav-item {
        animation: navItemEntrance 0.4s ease forwards;
        opacity: 0;
    }

        .nav-item:nth-child(1) { animation-delay: 0.1s; }
        .nav-item:nth-child(2) { animation-delay: 0.2s; }
        .nav-item:nth-child(3) { animation-delay: 0.3s; }
        .nav-item:nth-child(4) { animation-delay: 0.4s; }
</style>


<div class="top-row ps-3 navbar navbar-dark bg-dark border-bottom">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Biblioteca Virtual</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@(_collapseNavMenu ? "collapse" : null) nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link text-white" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill me-2"></span> Inicio
            </NavLink>
        </div>

        <div class="nav-item px-3">
                <NavLink class="nav-link text-white" href="consultar-libro">
                    <span class="bi bi-search me-2"></span> Consultar Libro
                </NavLink>
            </div>

        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link text-white" href="misreservas">
                    <span class="bi bi-journal-bookmark me-2"></span> Mis Reservas
                </NavLink>
            </div>

            // Consultar libro movido 


            <div class="nav-item px-3">
                <a class="nav-link text-white" href="#" @onclick="Logout">
                    <span class="bi bi-box-arrow-right me-2"></span> Cerrar sesión
                </a>
            </div>

            
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link text-white" href="login">
                    <span class="bi bi-box-arrow-in-right me-2"></span> Iniciar sesión
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link text-white" href="register">
                    <span class="bi bi-person-plus-fill me-2"></span> Registrarse
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isAuthenticated = false;
    private string userRole = string.Empty;
    private bool _collapseNavMenu = true;

    protected override async Task OnInitializedAsync()
    {
        AuthContext.OnChange += StateHasChanged;
        Console.WriteLine("[NavMenu] Cargando autenticación...");
        await AuthContext.LoadTokenFromLocalStorageAsync();
        isAuthenticated = !string.IsNullOrEmpty(AuthContext.UserToken);
    }

    public void Dispose()
    {
        AuthContext.OnChange -= StateHasChanged;
    }

    private async Task Logout()
    {
        Console.WriteLine("[NavMenu] Cerrando sesión...");
        await AuthContext.LogoutAsync();
        isAuthenticated = false;
        NavigationManager.NavigateTo("/", forceLoad: true);
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }
}