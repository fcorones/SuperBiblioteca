@page "/libro/{Id:int}"
@using BibliotecaDeClasesWinformYBlazor.Servicios
@using BibliotecaDeClasesWinformYBlazor.Models
@inject LibroService LibroService
@inject NavigationManager Navigation
@inject AuthContext AuthContext


<style>
    
    .btn-ver-libro {
        background: linear-gradient(135deg, #4a4a4a, #2d2d2d);
        border: none;
        border-radius: 8px;
        color: white !important;
        padding: 0.5rem 1.5rem;
        transition: all 0.3s ease;
    }

        .btn-ver-libro:hover {
            background: linear-gradient(135deg, #2d2d2d, #4a4a4a);
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .text-muted {
        color: #6c757d !important;
        font-style: italic;
    }

    .bi-info-circle {
        color: #6c757d;
        font-size: 1rem;
    }
</style>

<div class="container my-5">
    <div class="card shadow card-libro-detalle">
        <div class="card-body p-5">
            @if (Libro == null)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-3">Cargando detalles...</p>
                </div>
            }
            else
            {
                <div class="text-center">
                    <img src="@Libro.PortadaUrl" alt="@Libro.Titulo" class="img-fluid rounded mb-4" style="max-height: 300px;" />
                </div>

                <h1 class="display-4">@Libro.Titulo</h1>
                <h2 class="h4 text-muted mb-4">@Libro.NombreAutor</h2>

                <hr class="my-4" />

                <div class="row">
                    <div class="col-md-6">
                        <p><i class="fas fa-book me-2"></i> <strong>Editorial:</strong> @Libro.NombreEditorial</p>
                        <p><i class="fas fa-calendar-alt me-2"></i> <strong>Año de publicación:</strong> @Libro.AnioDePublicacion</p>
                    </div>
                    <div class="col-md-6">
                        <p><i class="fas fa-tags me-2"></i> <strong>Géneros:</strong> @string.Join(", ", Libro.NombresGeneros)</p>
                        <p><i class="fas fa-barcode me-2"></i> <strong>ISBN:</strong> @Libro.ISBN</p>
                    </div>
                </div>

                <hr class="my-4" />

                <p class="lead"><strong>Descripción:</strong> @Libro.Descripcion</p>

                @if (!string.IsNullOrEmpty(AuthContext.UserToken))
                {
                    <div class="text-center mt-4">
                        <button class="btn btn-ver-libro" @onclick="ReservarLibro">Reservar Libro</button>
                    </div>
                }
                else
                {
                    <div class="text-center mt-4">
                        <p class="text-muted" style="font-size: 0.9rem;">
                            <i class="bi bi-info-circle me-2"></i>Inicie sesión para reservar este libro.
                        </p>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Libro Libro { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            Libro = await LibroService.GetLibroByIdAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en obtener detalles del libro: {ex.Message}");
        }
    }

    private void ReservarLibro()
    {
        Navigation.NavigateTo($"/reservar/{Id}");
    }
}